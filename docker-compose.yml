version: "3.7"
services:
  ## POSTGRES ##
  postgres_db:
    image: postgres
    networks:
      - database
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=demo
    restart: always
    volumes:
      - ./server/database/data/dev:/var/lib/postgresql/data
    container_name: postgres_db
    ports:
      - 5432:5432
  ## SERVER ##
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    networks:
      - webapp
      - database
    ports:
      - 5500:5500
    environment:
      - SECRET="SEEEEC"
    volumes:
      - ./server/node_modules:/app/node_modules
      - ./server/src:/app/src
    depends_on:
      - postgres_db
    restart: always
    container_name: server
    develop:
      watch:
        - action: sync
          path: ./server
          # target: /src/web
          ignore:
            - ./node_modules/
        - action: rebuild
          path: ./server/package.json
  ## CLIENT ##
  # client:
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ./client/.env
  #   volumes:
  #     - ./client/node_modules:/app/node_modules
  #     - ./client/src:/app/src
  #     - ./client/public:/app/public
  #   networks:
  #     - webapp
  #   ports:
  #     - 3000:3000
  #   command: npm start
  #   stdin_open: true
  #   restart: always
  #   container_name: client
networks:
  webapp:
    driver: bridge
  database:
    driver: bridge
